// This is just a basic example and might need adjustments based on your specific requirements.
// Consider adding constraints, indexes, and other relevant fields.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    Int                     @id @default(autoincrement())
  fname                 String
  lname                 String
  email                 String                  @unique
  password              String
  joinedOn              DateTime                @default(now())
  links                 Link[]
  FreeStudyMaterials    FreeStudyMaterials[]
  FreeAndUsefulSoftware FreeAndUsefulSoftware[]
  JobsAndInternships    JobsAndInternships[]
  Scholarships          Scholarships[]
  Hackathons            Hackathons[]
  loggedIn              Boolean                 @default(true)
}

model Link {
  id       Int      @id @default(autoincrement())
  title    String
  desc     String
  link     String
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  postedOn DateTime @default(now())

  @@index([userId])
}

model FreeStudyMaterials {
  id         Int      @id @default(autoincrement())
  title      String
  desc       String
  link       String
  categories String[]
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  postedOn   DateTime @default(now())
  views      Int      @default(0)
}

model FreeAndUsefulSoftware {
  id       Int      @id @default(autoincrement())
  title    String
  desc     String
  link     String
  version  String
  category String
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  postedOn DateTime @default(now())
  views    Int      @default(0)
}

model JobsAndInternships {
  id       Int      @id @default(autoincrement())
  title    String
  desc     String
  link     String
  role     String
  skills   String[]
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  postedOn DateTime @default(now())
  views    Int      @default(0)
}

model Scholarships {
  id       Int      @id @default(autoincrement())
  title    String
  desc     String
  link     String
  org      String
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  postedOn DateTime @default(now())
  views    Int      @default(0)
}

model Hackathons {
  id        Int      @id @default(autoincrement())
  title     String
  desc      String
  link      String
  location  String
  domain    String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  prizepool Int
  postedOn  DateTime @default(now())
  views     Int      @default(0)
}
